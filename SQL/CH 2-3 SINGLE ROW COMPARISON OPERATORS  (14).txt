1 DISPLAY THOSE WHO WORKS IN DEPARTMENT 60
=>  select * from employees where department_id=60;

2 DISPLAY THOSE WHO WORKS AS IT_PROG
=>  select * from employees where job_id = 'IT_PROG';

3 DISPLAY THOSE WHO WERE HIRED AFTER 95
=> select * from employees where hire_date > '31-dec-95';

4 DISPLAY THOSE WHO GETS LOWER SALARY THAN 9000
=> select * from employees where salary<9000;

5 DISPLAY THOSE WHO GETS SALARY 11000 OR MORE
=> select * from employees where salary >= 11000;

6 DISPLAY FIRST_NAME AND HIRE_DATE WHO WERE HIRED BEFORE 1993.
=> select first_name, hire_date from employees where hire_date < '01-jan-93';

7 DISPLAY LAST_NAME , JOB_ID FOR EMPLOYEES WHO DOESN'T WORK AS ST_CLERK.
=> select last_name, job_id from employees where job_id <> 'ST_CLERK';

8 DISPLAY EMPLOYEE_ID , MANAGER_ID FOR EMPLOYEES WHO REPORTS TO 149.
=> select employee_id, manager_id from employees where manager_id = 149;

9 DISPLAY ALL OTHER THAN THOSE WHO WORKS IN DEPARTMENT 50.
=> select * from employees where department_id <> 50;

10 DISPLAY ALL FIRST NAME WHICH COMES BEFORE ALPHABET 'J'.
=> select first_name from employees where first_name < 'J';

11 DISPLAY ALL LAST_NAME WHICH COMES AFTER 'M'.
=> select last_name from employees where last_name > 'M';

12 DISPLAY FIRST_NAME , SALARY FOR THOSE WHO GETS HIGHER SALARY THAN 6000. SORT RESULT ON SALARY IN DESCENDING ORDER.
=>  select first_name, salary from employees where salary > 6000 order by salary desc;

13 DISPLAY LAST_NAME , HIRE_DATE FOR THOSE WHO WERE HIRED AFTER 95. SORT RESULT ON HIRE_DATE COLUMN. DISPLAY ONLY FIRST 5 ROWS.
=> select last_name, hire_date from hr.employees where hire_date > '31-dec-95' order by hire_date fetch first 5 rows only;

14 DISPLAY EMPLOYEE_ID , MANAGER_ID FOR THOSE WHO DOESN'T REPORT TO 100. SORT RESULT ON MANAGER_ID DESCENDING. DISPLAY ONLY FIRST 7 OR MORE ROWS.
=> select employee_id, manager_id from hr.employees where manager_id <> 100 order by 2 desc fetch first 7 rows with ties;


15 DISPLAY FIRST_NAME , SALARY WHO GETS SALARY UPTO 10000. DISPLAY ROWS STARTING WITH 6 UPTO 10.
=> select first_name, salary from hr.employees where salary <= 10000 offset 5 rows fetch next 4 rows only;

16 DISPLAY FIRST_NAME , SALARY , ANNUAL SALARY. DISPLAY ONLY THOSE WHOSE ANNUAL SALARY IS HIGHER THAN 150000.
=> select first_name, salary, salary*12 as annual_salary from hr.employees where salary*12 > 150000;

17 DISPLAY LAST_NAME , SALARY , COMMISSION_PCT , COMMISSION_AMOUNT. DISPLAY THOSE WHOSE COMMISSION_AMOUNT IS LOWER THAN 1000.
=> select last_name, salary, commission_pct, salary*commission_pct as commission_amt from hr.employees where salary*commission_pct < 1000;

18 DISPLAY FIRST_NAME , HIRE_DATE FOR THOSE WHO WERE HIRED IN OR BEFORE 96. SORT ON HIRE_DATE COLUMN. DISPLAY ROWS STARTING WITH 3, UPTO 7.
=> select first_name, hire_date from employees where hire_date < '01-jan-97' order by hire_date offset 2 rows fetch next 5 rows only;

19 DISPLAY ROWID AND ALL COLUMNS OF EMPLOYEES TABLE. DISPLAY ONLY THOSE WHO GETS SALARY HIGHER THAN 9000. SORT ROWS IN ROWID DESCENDING ORDER. DISPLAY ROWS STARTING WITH 4 UPTO 7. (DON'T USE TABLE ALIAS)
=> select rowid, employees.* from employees where salary > 9000 order by rowid desc offset 3 rows fetch next 4 rows only

20 DISPLAY ROWID , ALL COLUMNS , ANNUAL SALARY FROM EMPLOYEES TABLE. DISPLAY ONLY THOSE WHOSE ANNUAL SALARY IS UPTO 150000. SORT ON ANNUAL SALARY DESCENDING ORDER.
=> select rowid, e.*, salary*12 as annual_salary from employees e where salary*12 <= 150000 order by 3 desc;

21 DISPLAY FIRST_NAME AND SALARY FOR THOSE WHO GETS SALARY IN FOUR FIGURES.
=> select first_name, salary from employees where salary >= 1000 and salary < 9999;

22 DISPLAY LAST_NAME AND COMMISSION_PCT FOR THOSE WHO GETS COMMISSION.
=> select last_name, commission_pct from employees where commission_pct <> 0;
 
23 DISPLAY ONLY THOSE LAST_NAME WHOSE FIRST ALPHABET IS IN THE RANGE OF 'S' TO 'Z'
=> select last_name from employees where first_name > 'S' and first_name < 'Z';

24 DISPLAY FIRST_NAME , COMMISSION_PCT WHO GETS 30% COMMISSION.
=> select first_name, commission_pct from employees where commission_pct*100 = 30;

25 DISPLAY LAST_NAME , MANAGER_ID WHO REPORTS TO SOMEBODY.
=> select last_name, manager_id from employees where manager_id <> 0;



